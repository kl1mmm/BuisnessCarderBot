#–§–∞–π–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π –∫–æ–¥ –±–æ—Ç–∞

import telebot
from PIL import Image, ImageDraw, ImageFont
from Setting import ApiKeyTelegramBot
from Markup import markupStart
from Markup import markupScreen
from Markup import markupMessage
from Markup import markupAddContacts
from Markup import markupFinalLoad
from Markup import markupSelectTemplate
from Markup import markupThanks
from Markup import markupGetCard
from Markup import markupRemove
from String import *

bot = telebot.TeleBot(ApiKeyTelegramBot)

DataClient = ['', '', '', '', '']
DiscripAdd, ContactsAdd = False, False
Phone, Email, Address = False, False, False

#-–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è-------------------------------------------------------------------------------------------------------
@bot.message_handler(commands=['start'])
def start(msg):
    bot.send_message(msg.chat.id, MessageStart, reply_markup=markupStart)


#-–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–º–∞–Ω–¥---------------------------------------------------------------------------------------------------------
@bot.message_handler(content_types=['text'])
def textByUser(msg):
    if msg.chat.type == 'private':
        if msg.text == '–ú–µ–Ω—é':
            bot.send_message(msg.chat.id, MessageScreen1, reply_markup=markupScreen)
        elif msg.text == '–°–æ–∑–¥–∞—Ç—å –≤–∏–∑–∏—Ç–∫—É.':
            bot.send_message(msg.chat.id, MessageStartActive, reply_markup=markupScreen)
        elif msg.text == '–°—Ç–æ–ø. –Ø –Ω–µ –≥–æ—Ç–æ–≤.':
            bot.send_message(msg.chat.id, MessageStop, reply_markup=markupStart)
        elif msg.text == '–ü–æ–º–æ—â—å –∏ –∫—Ä–∞—Ç–∫–∞—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è –∫ –±–æ—Ç—É.':
            bot.send_message(msg.chat.id, MessageHelp, reply_markup=markupStart)
        elif msg.text == '–°–æ–∑–¥–∞–Ω–∏–µ.':
            bot.send_message(msg.chat.id, MessageStartCreate, reply_markup=telebot.types.ReplyKeyboardRemove())
            bot.send_message(msg.chat.id, MessageCreatingCard, reply_markup=markupMessage)
        elif msg.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑–∏—Ç–∫–∏ üìå.':
            bot.send_message(msg.chat.id, '–í—ã–±–µ—Ä–∏ —à–∞–±–ª–æ–Ω –≤–∏–∑–∏—Ç–∫–∏:')
            var1example = open('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/var1-example.png', 'rb')
            var2example = open('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/var2-example.png', 'rb')
            var3example = open('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/var3-example.png', 'rb')
            bot.send_photo(msg.chat.id, var1example, caption='–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ1Ô∏è‚É£')
            bot.send_photo(msg.chat.id, var2example, caption='–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ2Ô∏è‚É£')
            bot.send_photo(msg.chat.id, var3example, caption='–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ3Ô∏è‚É£')
            message_to_next_step = bot.send_message(msg.chat.id, MessageSelectTemplate, reply_markup=markupSelectTemplate)
            bot.register_next_step_handler(message_to_next_step, SelectTemplate)
        elif msg.text == '–ü–æ–ª—É—á–∏—Ç—å –≤–∏–∑–∏—Ç–∫—É.':
            visit_card = open('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/BuisnessCard.png', 'rb')
            bot.send_document(msg.chat.id, visit_card, reply_markup=markupThanks)
        elif msg.text == '–ë–ª–∞–≥–æ–¥–∞—Ä—é!':
            bot.send_message(chat_id=msg.chat.id, text='–†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º.', reply_markup=markupRemove)
            bot.send_message(chat_id=msg.chat.id, text='–ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–∏–∑–∏—Ç–∫—É, –ø–∏—à–∏: "–ú–µ–Ω—é" ‚öôÔ∏è.')
        else:
            bot.send_message(msg.chat.id, MessageError, reply_markup=markupStart)


@bot.message_handler(content_types=['text'])
def SelectTemplate(msg):
    if msg.text == '–ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç':
        bot.send_message(chat_id=msg.chat.id, text='–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –≤–∏–∑–∏—Ç–∫—É.',
                         reply_markup=markupGetCard)
        img = '/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/template1.png'
        bot.send_message(chat_id=msg.chat.id, text='–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–∑–∏—Ç–∫–∏ üîÑ...')
        creating_visit_Card1(img)
    elif msg.text == '–í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç':
        bot.send_message(chat_id=msg.chat.id, text='–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –≤–∏–∑–∏—Ç–∫—É.',
                         reply_markup=markupGetCard)
        img = '/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/template2.png'
        bot.send_message(chat_id=msg.chat.id, text='–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–∑–∏—Ç–∫–∏ üîÑ...')
        creating_visit_Card2(img)
    elif msg.text == '–¢—Ä–µ—Ç–∏–π –≤–∞—Ä–∏–∞–Ω—Ç':
        bot.send_message(chat_id=msg.chat.id, text='–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –≤–∏–∑–∏—Ç–∫—É.',
                         reply_markup=markupGetCard)
        img = '/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/template3.png'
        bot.send_message(chat_id=msg.chat.id, text='–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–∑–∏—Ç–∫–∏ üîÑ...')
        creating_visit_Card3(img)


@bot.message_handler(content_types=['text'])
def after_text_Name(msg):
    DataClient[0] = msg.text
    msg = bot.send_message(chat_id=msg.chat.id, text='–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:')
    bot.register_next_step_handler(msg, after_text_Spec)
def after_text_Spec(msg):
    DataClient[1] = msg.text
    global DiscripAdd
    DiscripAdd = True
    if ContactsAdd == False:
        bot.send_message(chat_id=msg.chat.id, text='–ö–∞—Ä—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–Ω–µ—Å–µ–Ω–∞. –î–∞–ª–µ–µ –≤—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª "–ö–æ–Ω—Ç–∞–∫—Ç—ã" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤—ã—à–µ.')
    else:
        bot.send_message(chat_id=msg.chat.id, text='–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑–∏—Ç–∫–∏ –≥–æ—Ç–æ–≤—ã.', reply_markup=markupFinalLoad)
    exit()
def after_text_Phone(msg):
    DataClient[2] = msg.text
    global Phone
    Phone = True
    bot.send_message(chat_id=msg.chat.id, text="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - ‚úÖ")
    bot.send_message(chat_id=msg.chat.id, text=MessageFinalLoad, reply_markup=markupFinalLoad)
def after_text_Email(msg):
    DataClient[3] = msg.text
    global Email
    Email = True
    bot.send_message(chat_id=msg.chat.id, text='–ü–æ—á—Ç–∞ - ‚úÖ')
def after_text_Address(msg):
    DataClient[4] = msg.text
    global Address
    Address = True
    bot.send_message(chat_id=msg.chat.id, text='–ê–¥—Ä–µ—Å - ‚úÖ')


#-–û–±—Ä–∞–±–æ—Ç–∫–∞ —ç–∫—Ä–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫-----------------------------------------------------------------------------------------------------------
@bot.callback_query_handler(func=lambda c: c.data)
def card_handling(callback):
    if callback.data == 'discription':
        bot.send_message(chat_id=callback.message.chat.id, text=MessageAskDiscrip)
        msg = bot.send_message(chat_id=callback.message.chat.id, text=MessageDiscripExample)
        bot.register_next_step_handler(msg, after_text_Name)

    if callback.data == 'contacts':
        bot.answer_callback_query(callback.id, text="–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ ‚úÖ.")
        bot.send_message(chat_id=callback.message.chat.id, text=MessageAskContacts, reply_markup=markupAddContacts)
    if callback.data == 'phone':
        msg = bot.send_message(chat_id=callback.message.chat.id, text='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ')
        bot.register_next_step_handler(msg, after_text_Phone)
    if callback.data == 'email':
        msg = bot.send_message(chat_id=callback.message.chat.id, text='–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: ')
        bot.register_next_step_handler(msg, after_text_Email)
    if callback.data == 'address':
        msg = bot.send_message(chat_id=callback.message.chat.id, text='–£–∫–∞–∑—ã–≤–∞–µ–º—ã–π –∞–¥—Ä–µ—Å: ')
        bot.register_next_step_handler(msg, after_text_Address)


def creating_visit_Card1(img):
    Template = Image.open(img)
    MainFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/ofont.ru_Bebas Neue.ttf', size=54)
    SecFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/BebasNeue-Light.otf', size=34)
    ThirdFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/montserrat-light.ttf', size=20)
    TempDraw = ImageDraw.Draw(Template)
    TempDraw.text((150, 140), DataClient[0], font=MainFont, fill='black')
    TempDraw.text((150, 230), DataClient[1], font=SecFont, fill='black')
    TempDraw.text((790, 370), DataClient[2], font=ThirdFont, fill='black')
    TempDraw.text((740, 400), DataClient[3], font=ThirdFont, fill='black')
    TempDraw.text((530, 430), DataClient[4], font=ThirdFont, fill='black')
    Template.save('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/BuisnessCard.png')

def creating_visit_Card2(img):
    Template = Image.open(img)
    MainFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/CATNeuzeit.ttf', size=54)
    SecFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/ofont.ru_Clear Sans.ttf', size=23)
    ThirdFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/ofont.ru_Clear Sans.ttf', size=27)
    TempDraw = ImageDraw.Draw(Template)
    TempDraw.text((42, 130), DataClient[0], font=MainFont, fill='black')
    TempDraw.text((46, 210), DataClient[1], font=SecFont, fill='black')
    TempDraw.text((350, 335), '–ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: '+DataClient[2], font=ThirdFont, fill='black')
    TempDraw.text((350, 370), '–≠–ª.–ø–æ—á—Ç–∞: '+DataClient[3], font=ThirdFont, fill='black')
    TempDraw.text((350, 405), '–ê–¥—Ä–µ—Å: '+DataClient[4], font=ThirdFont, fill='black')
    Template.save('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/BuisnessCard.png')

def creating_visit_Card3(img):
    Template = Image.open(img)
    MainFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/crimson_roman.otf', size=54)
    SecFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/SourceSansPro-Light.ttf', size=23)
    ThirdFont = ImageFont.truetype('/Users/ilyaklimov/Library/Fonts/SourceSansPro-Light.ttf', size=27)
    TempDraw = ImageDraw.Draw(Template)
    TempDraw.text((505, 60), DataClient[0], font=MainFont, fill='#3a4520')
    TempDraw.text((510, 215), DataClient[1], font=SecFont, fill='#975c10')
    TempDraw.text((510, 380), DataClient[2], font=ThirdFont, fill='#3a4520')
    TempDraw.text((510, 410), DataClient[3], font=ThirdFont, fill='#3a4520')
    TempDraw.text((510, 440), DataClient[4], font=ThirdFont, fill='#3a4520')
    Template.save('/Users/ilyaklimov/Desktop/–£—á–µÃà–±–∞/–ü—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è/BuisenssCarderBot/templates/BuisnessCard.png')

bot.polling(none_stop = True)

